<?php
/**
 * @file
 * Code for the Volunteer Management feature.
 */

include_once 'kidneys_volunteer.features.inc';

/**
 * Implements hook_menu().
 */
function kidneys_volunteer_menu() {
  // A redirect page for facebook shares that require it.
  $items['volunteer/app/%'] = array(
    //'title' => t('Sign Up to Volunteer'),
    //'title callback' => 'kidneys_volunteer_app_title',
    //'title arguments' => array(2),
    'page callback' => 'kidneys_volunteer_app_page',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_theme
 */
function kidneys_volunteer_theme($existing, $type, $theme, $path) {
  return array(
    'kidneys_volunteer_app' => array(
      'template' => 'kidneys-volunteer-app',
      'path' => drupal_get_path('module', 'kidneys_volunteer') . '/templates',
      'type' => 'theme',
      'variables' => array(
        'title' => NULL,
        'form' => NULL
      ),
    ),
  );
}

function kidneys_volunteer_load_entity_from_sf($sf_id) {
  $mapping = salesforce_mapping_object_load_by_sfid($sf_id);
  if ($mapping) {
    $entity = entity_load_single($mapping->entity_type, $mapping->entity_id);
    if ($entity) {
      return entity_metadata_wrapper($mapping->entity_type, $entity);
    }
  }
  return FALSE;
}

function kidneys_volunteer_app_title($sf_id) {
  $wrapper = kidneys_volunteer_load_entity_from_sf($sf_id);
  if ($wrapper) {
    return t($wrapper->label());
  }
}
function kidneys_volunteer_entityform_get_entity($type){

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'entityform_type')
        ->propertyCondition('type', $type);
  $result = $query->execute();

  if (!empty($result)) {
    $id = key($result['entityform_type']);
    $entity_form = entity_load('entityform_type', array($id));
    return $entity_form[$id];
  }
  else {
    return FALSE;
  }
}

function kidneys_volunteer_app_page($sf_id) {



  $vars = array();
  $volunteer_opp = kidneys_volunteer_load_entity_from_sf($sf_id);
  $entity_form = kidneys_volunteer_entityform_get_entity('volunteer_application');
  if ($entity_form && entityform_access('submit', $entity_form)) {
    module_load_include('inc', 'entityform', 'entityform.admin');
    $form = entityform_form_wrapper(entityform_empty_load('volunteer_application'), 'submit', 'embedded');
    $vars['form'] = drupal_render($form);
  }
  $vars['title'] = $volunteer_opp->label();
  $vars['description'] = $volunteer_opp->body->value->value();
  $office = $volunteer_opp->field_base_related_office->get(0);
  if(!empty($office)) {
    $vars['office'] = $office->title->value();
  }
  $vars['path'] = url(current_path(), array('absolute' => TRUE, 'query' => drupal_get_query_parameters()));

  // Handle metatags
  include_once 'kidneys_volunteer.metatags.inc';
  $vol_type_detail = $volunteer_opp->field_vol_type_detail->value();
  kidneys_volunteer_add_metatags($vol_type_detail);

  return theme('kidneys_volunteer_app', $vars);
}
/**
 * Implements hook_salesforce_query_alter().
 */
function kidneys_volunteer_salesforce_query_alter(SalesforceSelectQuery &$query) {
  // Add office and campaign name to query.
  if ($query->objectType == 'Volunteer_Role__c') {
    $query->fields[] = 'campaign__r.NKF_Office__c';
    $query->fields[] = 'campaign__r.Name';
    $query->fields[] = 'campaign__r.Public_Campaign_Name__c';
  }
}
/**
 * Implements hook_salesforce_pull_entity_value_alter().
 */
function kidneys_volunteer_salesforce_pull_entity_value_alter(&$value, $field_map, $sf_object) {

  // Find the related office for the volunteer position based on the parent campaign.
  if (!empty($sf_object['Campaign__r'])
      && !empty($sf_object['Campaign__r']['NKF_Office__c'])
      && $field_map['drupal_field']['fieldmap_value'] == 'field_base_related_office') {
    $sf_office_id = $sf_object['Campaign__r']['NKF_Office__c'];
    $mapping_object = salesforce_mapping_object_load_by_sfid($sf_office_id);
    if ($mapping_object) {
      $value = $mapping_object->entity_id;
    } else {
      // need to pull in this object from SF
      watchdog('kidneys_volunteer' , 'missing nkf office for ' . $value);
    }
  }
  // Grab the campaign's  name.
  if (!empty($sf_object['Campaign__r'])
      && !empty($sf_object['Campaign__r']['Name'])
      && $field_map['drupal_field']['fieldmap_value'] == 'field_vol_campaign_name') {
        // If the public name exists then use that.
    if (!empty($sf_object['Campaign__r']['Public_Campaign_Name__c'])) {
      $value = $sf_object['Campaign__r']['Public_Campaign_Name__c'];
    } else {
      $value = $sf_object['Campaign__r']['Name'];
    }

  }
  //watchdog('kidneys_volunteer' , 'field: ' . $field_map['drupal_field']['fieldmap_value']);
  //watchdog('kidneys_volunteer' , 'sf object: <pre>' . print_r($sf_object,1). '</pre>');
  //watchdog('kidneys_volunteer' , 'value:' . $value);
}

/**
 * Implements hook_salesforce_push_params_alter().
 */
function kidneys_volunteer_salesforce_push_params_alter(&$params, $mapping, $entity_wrapper) {
  if ($entity_wrapper->type()== 'entityform') {
    // Grab the SF ID for the Volunteer Job on the application.
    if (array_key_exists('Volunteer_Role__c', $params)) {
      $mapping_object = salesforce_mapping_object_load_by_drupal('node', $entity_wrapper->field_vol_related_opp->value()->nid);
      if (isset($mapping_object)) {
        $params['Volunteer_Role__c'] = $mapping_object->salesforce_id;
      }
    }

    // Grab the SF ID for the Contact on the application.
    if (array_key_exists('Contact__c', $params)) {
      $mapping_object = salesforce_mapping_object_load_by_drupal('redhen_contact', $entity_wrapper->field_base_related_contact->value()->contact_id);
      if (!empty($mapping_object)) {
        $params['Contact__c'] = $mapping_object->salesforce_id;
      } else {
        unset($params['Contact__c']);
        watchdog('kidneys_volunteer', 'missing SF contact id for '. $entity_wrapper->field_base_related_contact->value()->contact_id);
      }
    }
  }
  //watchdog('kidneys_volunteer', 'push params: <pre>'.print_r($params, 1). '</pre>');
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function kidneys_volunteer_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'volunteer_application_entityform_edit_form') {
    $form['field_base_related_contact']['#access'] = FALSE;
    $form['field_vol_related_opp']['#access'] = FALSE;
    $form['field_vol_related_sf_campaign']['#access'] = FALSE;
    if ((arg(2) && $vo_id = arg(2)) || (!empty($_GET['volunteer-opportunity']) && $vo_id = $_GET['volunteer-opportunity'])) {
      $mapping_object = salesforce_mapping_object_load_by_sfid($vo_id);
      if ($mapping_object) {
        $vo_id = $mapping_object->entity_id;
      }
      $vo = node_load($vo_id);
      if ($vo) {
        // Set the default interests based on opportunity selected
        $vo_type = mb_strtolower($vo->field_vol_type[LANGUAGE_NONE][0]['value']);
        switch ($vo_type) {
          case 'media':
            $form['field_vol_media'][LANGUAGE_NONE]['#default_value'] = 1;
            break;
          case 'admin':
            $form['field_vol_admin_office_support'][LANGUAGE_NONE]['#default_value'] = 1;
            break;
          case 'medical':
            $form['field_vol_med_prog_reviewer'][LANGUAGE_NONE]['#default_value'] = 1;
            break;
          case 'fundraiser':
            $form['field_vol_fundraising_event'][LANGUAGE_NONE]['#default_value'] = 1;
            break;
        }
        $form['field_vol_related_opp'][LANGUAGE_NONE][0]['target_id']['#default_value'] = 'Opp (' .$vo->nid . ')';
        if ($vo->field_vol_related_sf_campaign) {
            $form['field_vol_related_sf_campaign'][LANGUAGE_NONE][0]['value']['#default_value'] = $vo->field_vol_related_sf_campaign[LANGUAGE_NONE][0]['value'];
        }


      }
    }
    $form['#prefix'] = '<div class="grid bg--white ">';
    $form['#suffix'] = '</div>';
    $form['field_base_address'][LANGUAGE_NONE][0]['country']['#access'] = FALSE;
    $form['field_base_first_name']['#attributes']['class'][] = 'grid-cell sm--width--50 width--100 padding-x--xxs';
    $form['field_base_last_name']['#attributes']['class'][] = 'grid-cell sm--width--50 width--100 padding-x--xxs';
    $form['field_base_email']['#attributes']['class'][] = 'grid-cell sm--width--50 width--100 padding-x--xxs';
    $form['field_base_phone']['#attributes']['class'][] = 'grid-cell sm--width--50 width--100 padding-x--xxs';

    /*
    $form['field_vol_interest_admin']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    $form['field_vol_interest_advocacy']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    $form['field_vol_interest_prof_review']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    $form['field_vol_interest_screening']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    $form['field_vol_interest_walks']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    $form['field_vol_interest_events']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    $form['field_vol_available_daystimes']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    $form['field_vol_available_notes']['#attributes']['class'][] = 'grid-cell width--100 padding-x--xxs';
    */
    $form['field_base_address'][LANGUAGE_NONE][0]['#type'] = 'container';
    $form['field_base_address'][LANGUAGE_NONE][0]['street_block']['#attributes']['class'][] = 'grid width--100';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['#attributes']['class'][] = 'grid width--100';
    $form['field_base_address'][LANGUAGE_NONE][0]['street_block']['thoroughfare']['#prefix'] = '<div class="grid-cell width--100 padding-x--xxs">';
    $form['field_base_address'][LANGUAGE_NONE][0]['street_block']['thoroughfare']['#suffix'] = '</div>';
    $form['field_base_address'][LANGUAGE_NONE][0]['street_block']['thoroughfare']['#attributes']['class'][] = 'width--100';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['locality']['#prefix']= '<div class="grid-cell sm--width--55 width--100 padding-x--xxs">';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['locality']['#suffix']= '</div>';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['locality']['#attributes']['class'][] = 'width--100';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['administrative_area']['#prefix']= '<div class="grid-cell sm--width--20 width--100 padding-x--xxs">';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['administrative_area']['#suffix']= '</div>';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['administrative_area']['#attributes']['class'][] = 'width--100';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['postal_code']['#prefix']= '<div class="grid-cell sm--width--25 width--100 padding-x--xxs">';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['postal_code']['#suffix']= '</div>';
    $form['field_base_address'][LANGUAGE_NONE][0]['locality_block']['postal_code']['#attributes']['class'][] = 'width--100';

    $form['actions']['#attributes']['class'][] = 'text-align--center sm--hide ';
    $form['actions']['submit']['#attributes']['class'][] = 'grid-cell button--green caps bold';

    $form['#attributes']['class'][] = 'width--100';

    array_unshift($form['#validate'], 'kidneys_volunteer_app_form_validate');
  }
}

function kidneys_volunteer_app_form_validate($form, &$form_state) {

  if (!empty($form_state['values']['field_base_email'][LANGUAGE_NONE])) {
    if (!valid_email_address($form_state['values']['field_base_email'][LANGUAGE_NONE][0]['value'])) {
      form_set_error($name = 'field_base_email', $message = 'Please enter a valid email address.');
    }
  }
}
/*
 * Implements hook_entityform_insert
 */
function kidneys_volunteer_entityform_insert($entityform) {
  if ($entityform->type == 'volunteer_application') {
    //$submission = entity_load_single('entityform', $entityform->entityform_id);
    //$submission_wrapper = entity_metadata_wrapper('entityform', $submission);
    //drupal_goto('iga-trial/results/' . $entityform->entityform_id);
  }

}
